var DisconnectResponse;function initWebappServiceWorker(){const e="@relprefix@".replace("---","").replace(/^\//,""),o=-1===e.indexOf("/"),t="makecode;"+e+";@pxtRelId@",i=["@targetUrl@/"+e,"@simUrl@","/pxt-ev3-app/semantic.js","/pxt-ev3-app/main.js","/pxt-ev3-app/pxtapp.js","/pxt-ev3-app/typescript.js","/pxt-ev3-app/marked/marked.min.js","/pxt-ev3-app/highlight.js/highlight.pack.js","/pxt-ev3-app/jquery.js","/pxt-ev3-app/pxtlib.js","/pxt-ev3-app/pxtcompiler.js","/pxt-ev3-app/pxtpy.js","/pxt-ev3-app/pxtblockly.js","/pxt-ev3-app/pxteditor.js","/pxt-ev3-app/pxtsim.js","/pxt-ev3-app/pxtembed.js","/pxt-ev3-app/pxtworker.js","/pxt-ev3-app/pxtweb.js","/pxt-ev3-app/blockly.css","/pxt-ev3-app/semantic.css","/pxt-ev3-app/rtlsemantic.css","/pxt-ev3-app/blockly/media/sprites.png","/pxt-ev3-app/blockly/media/click.mp3","/pxt-ev3-app/blockly/media/disconnect.wav","/pxt-ev3-app/blockly/media/delete.mp3","/pxt-ev3-app/vs/loader.js","/pxt-ev3-app/vs/base/worker/workerMain.js","/pxt-ev3-app/vs/basic-languages/bat/bat.js","/pxt-ev3-app/vs/basic-languages/cpp/cpp.js","/pxt-ev3-app/vs/basic-languages/python/python.js","/pxt-ev3-app/vs/basic-languages/markdown/markdown.js","/pxt-ev3-app/vs/editor/editor.main.css","/pxt-ev3-app/vs/editor/editor.main.js","/pxt-ev3-app/vs/editor/editor.main.nls.js","/pxt-ev3-app/vs/language/json/jsonMode.js","/pxt-ev3-app/vs/language/json/jsonWorker.js","/pxt-ev3-app/smoothie/smoothie_compressed.js","/pxt-ev3-app/images/Bars_black.gif","/pxt-ev3-app/gifjs/gif.js","/pxt-ev3-app/ai.2.min.js","/pxt-ev3-app/target.js","/pxt-ev3-app/music-editor/apple.png","/pxt-ev3-app/music-editor/burger.png","/pxt-ev3-app/music-editor/cake.png","/pxt-ev3-app/music-editor/car.png","/pxt-ev3-app/music-editor/cat.png","/pxt-ev3-app/music-editor/cherry.png","/pxt-ev3-app/music-editor/clam.png","/pxt-ev3-app/music-editor/computer.png","/pxt-ev3-app/music-editor/crab.png","/pxt-ev3-app/music-editor/dog.png","/pxt-ev3-app/music-editor/duck.png","/pxt-ev3-app/music-editor/egg.png","/pxt-ev3-app/music-editor/explosion.png","/pxt-ev3-app/music-editor/fish.png","/pxt-ev3-app/music-editor/ice-cream.png","/pxt-ev3-app/music-editor/lemon.png","/pxt-ev3-app/music-editor/snake.png","/pxt-ev3-app/music-editor/star.png","/pxt-ev3-app/music-editor/strawberry.png","/pxt-ev3-app/music-editor/taco.png","/pxt-ev3-app/music-editor/bass-clef.svg","/pxt-ev3-app/music-editor/treble-clef.svg","/pxt-ev3-app/fieldeditors.js","/pxt-ev3-app/editor.js","","@targetUrl@/pxt-ev3-app/monacoworker.js","@targetUrl@/pxt-ev3-app/worker.js"],n=a(""),c=a("%2Fpxt-ev3-app%2Fdocs%2Fstatic%2Flego_education_logo.png;%2Fpxt-ev3-app%2Fdocs%2Fstatic%2Ficons%2Fandroid-chrome-192x192.png;%2Fpxt-ev3-app%2Fdocs%2Fstatic%2FMicrosoft-logo_rgb_c-gray-square.png;%2Fpxt-ev3-app%2Fdocs%2Fstatic%2FMicrosoft-logo_rgb_c-gray.png;%2Fpxt-ev3-app%2Fdocs%2Fstatic%2Fhero.png"),s=r(i.concat(c).map((e=>e.trim())).filter((e=>!!e&&0!==e.indexOf("@"))));let l=!1;function r(e){const o=[];for(const t of e)-1===o.indexOf(t)&&o.push(t);return o}function a(e){const o=String.fromCharCode(64)+"cdnUrl"+String.fromCharCode(64);return r(e.split(";").map((e=>decodeURIComponent(e).replace(o,"@cdnUrl@").trim())))}self.addEventListener("install",(e=>{o?(l=!0,console.log("Installing service worker..."),e.waitUntil(caches.open(t).then((e=>(console.log("Opened cache"),console.log("Caching:\n"+s.join("\n")),e.addAll(s).then((()=>e))))).then((e=>e.addAll(n).catch((e=>{console.log("Failed to cache hexfiles")})))).then((()=>self.skipWaiting())))):console.log("Skipping service worker install for unnamed endpoint")})),self.addEventListener("activate",(i=>{o?(console.log("Activating service worker..."),i.waitUntil(caches.keys().then((o=>{const i=o.filter((o=>{const i=function(e){const o=e.split(";");return 3!==o.length?null:o[1]}(o);return null===i||i===e&&o!==t}));return Promise.all(i.map((e=>caches.delete(e))))})).then((()=>l?(l=!1,function(){const o=self;return o.clients.claim().then((()=>o.clients.matchAll())).then((o=>{o.forEach((o=>o.postMessage({type:"serviceworker",state:"activated",ref:e})))}))}()):Promise.resolve())))):console.log("Skipping service worker activate for unnamed endpoint")})),self.addEventListener("fetch",(e=>{e.respondWith(caches.match(e.request).then((o=>o||fetch(e.request))))}))}function initWebUSB(){let e,o,t,i,n=0,c="idle";async function s(e){(await self.clients.matchAll()).forEach((o=>o.postMessage(e)))}function l(){let o;const i=new Promise((o=>{console.log("Waiting for disconnect "+e),t=o,s({type:"serviceworker",action:"packet-io-lock-disconnect",lock:e})})),n=new Promise((t=>{o=setTimeout((()=>{console.log("Timed-out disconnect request "+e),t(DisconnectResponse.TimedOut)}),5e3)}));return Promise.race([i,n]).then((e=>(clearTimeout(o),t=void 0,e)))}function r(e){return new Promise((o=>{setTimeout(o,e)}))}self.addEventListener("message",(async a=>{const b=a.data;if("serviceworkerclient"===(null==b?void 0:b.type))if("request-packet-io-lock"===b.action){if(e||(e=await function(){if(e)return Promise.resolve(e);let o;const t=new Promise((e=>{console.log("check for existing lock"),i=e,s({type:"serviceworker",action:"packet-io-status"})})),n=new Promise((e=>{o=setTimeout((()=>{console.log("Timed-out check for existing lock"),e(void 0)}),1e3)}));return Promise.race([t,n]).then((e=>(clearTimeout(o),i=void 0,e)))}()),"granting"===c)return void await s({type:"serviceworker",action:"packet-io-lock-granted",granted:!1,lock:b.lock});console.log("Received lock request "+b.lock);const t=Date.now()-n;if(o=b.lock,t<4e3&&(c="waiting",console.log("Waiting to grant lock request "+b.lock),await r(4e3-t)),o!==b.lock)return console.log("Rejecting old lock request "+b.lock),void await s({type:"serviceworker",action:"packet-io-lock-granted",granted:!1,lock:b.lock});if(c="granting",e){let e;do{console.log("Sending disconnect request "+b.lock),e=await l(),e===DisconnectResponse.Waiting&&(console.log("Waiting on disconnect request "+b.lock),await r(1e3))}while(e===DisconnectResponse.Waiting)}console.log("Granted lock request "+b.lock),e=b.lock,await s({type:"serviceworker",action:"packet-io-lock-granted",granted:!0,lock:b.lock}),n=Date.now(),c="idle"}else"release-packet-io-lock"===b.action?(console.log("Received disconnect for "+e),e=void 0,t&&t(DisconnectResponse.Disconnected)):"packet-io-lock-disconnect"===b.action?(console.log("Received disconnect response for "+e),b.didDisconnect&&(e=void 0),t&&t(b.didDisconnect?DisconnectResponse.Disconnected:DisconnectResponse.Waiting)):"packet-io-supported"===b.action?await s({type:"serviceworker",action:"packet-io-supported",supported:!0}):"packet-io-status"===b.action&&b.hasLock&&i&&i(b.lock)}))}!function(e){e[e.Disconnected=0]="Disconnected",e[e.Waiting=1]="Waiting",e[e.TimedOut=2]="TimedOut"}(DisconnectResponse||(DisconnectResponse={})),initWebappServiceWorker(),initWebUSB();